#import "TWCFileFormatObjectiveC.h"

@implementation TWCFileFormatObjectiveC

#pragma mark - TWCLanguage

- (NSString *)implementationFormatWithColours:(NSArray *)colours fileName:(NSString *)fileName
{
  NSMutableString *implementation = [NSMutableString stringWithString:@"#import \"UIColor+OTB.h\"\n\n"];
  NSString *body = [NSString stringWithFormat:@"@implementation UIColor (%@)\n\n%@@end", fileName, [colours componentsJoinedByString:@""]];
  [implementation appendString:body];
  return implementation;
}

- (NSString *)implementationFilePathWithName:(NSString *)fileName outputPath:(NSString *)outputPath
{
  NSString *filePath = [NSString stringWithFormat:@"%@/UIColor+%@.m", outputPath , fileName];
  return [filePath stringByExpandingTildeInPath];
}

- (NSString *)functionBodyWithR:(CGFloat)r g:(CGFloat)g b:(CGFloat)b a:(CGFloat)a
{
  return [NSString stringWithFormat:@"{\n  return [UIColor colorWithRed:%.3f green:%.3f blue:%.3f alpha:%.3f];\n}\n\n", r, g, b, a];
}

- (NSString *)functionNameWithPrefix:(NSString *)prefix colourName:(NSString *)colourName
{
  prefix = prefix.length > 0 ? [prefix stringByAppendingString:@"_"] : @"";
  return [NSString stringWithFormat:@"+ (UIColor *)%@%@Color;\n", prefix, [self camelCaseColourName:colourName]];
}

- (NSString *)interfaceFormatWithColours:(NSArray *)colours fileName:(NSString *)fileName
{
  NSMutableString *interface = [NSMutableString stringWithString:@"//  This file is automatically generated by TWCColourGenerator.\n\n@import UIKit;\n\n"];
  NSString *body = [NSString stringWithFormat:@"@interface UIColor (%@)\n\n%@\n@end", fileName, [colours componentsJoinedByString:@""]];
  [interface appendString:body];
  return interface;
}

- (NSString *)interfaceFilePathWithName:(NSString *)fileName outputPath:(NSString *)outputPath
{
  NSString *filePath = [NSString stringWithFormat:@"%@/UIColor+%@.h", outputPath , fileName];
  return [filePath stringByExpandingTildeInPath];
}

@end