#import "TWCColourGenerator.h"

@implementation TWCColourGenerator

+ (void)generateColourListWithInputPath:(NSString *)inputPath
                             outputPath:(NSString *)outputPath
                               fileName:(NSString *)fileName
                                 prefix:(NSString *)prefix
{
  NSColorList *colourList = [self colourListForInputPath:inputPath];
  NSMutableArray *colours = [NSMutableArray array];
  for (NSString *colourName in colourList.allKeys) {
    [colours addObject:[self functionWithColourList:colourList
                                             prefix:prefix
                                         colourName:colourName]];
  }
  [self writeToFileWithColours:colours
                    outputPath:outputPath
                      fileName:fileName];
}

+ (NSString *)functionWithColourList:(NSColorList *)colourList
                              prefix:(NSString *)prefix
                          colourName:(NSString *)colourName
{
  prefix = prefix.length > 0 ? [prefix stringByAppendingString:@"_"] : @"";
  NSColor *colour = [colourList colorWithKey:colourName];
  CGFloat r, g, b, a;
  [colour getRed:&r green:&g blue:&b alpha:&a];
  NSString *functionName = [NSString stringWithFormat:@"  class func %@%@Color() -> UIColor ", prefix, [self camelCaseColourName:colourName]];
  NSString *functionBody = [NSString stringWithFormat:@"{\n    return UIColor(red: %.3f, green: %.3f, blue: %.3f, alpha: %.3f)\n  }\n\n", r, g, b, a];
  return [functionName stringByAppendingString:functionBody];
}

+ (NSColorList *)colourListForInputPath:(NSString *)inputPath
{
  NSURL *colourPalletePathUrl = [NSURL URLWithString:inputPath];
  NSString *colourPalleteName = [colourPalletePathUrl.lastPathComponent stringByDeletingPathExtension];
  NSString *expandedInputPath = [colourPalletePathUrl.relativeString stringByExpandingTildeInPath];
  return [[NSColorList alloc] initWithName:colourPalleteName
                                  fromFile:expandedInputPath];
}

+ (NSString *)camelCaseColourName:(NSString *)colourName
{
  NSMutableString *mutableColourName = [colourName mutableCopy];
  NSString *lowerCaseFirstLetter = [[colourName substringToIndex:1] lowercaseString];
  [mutableColourName replaceCharactersInRange:NSMakeRange(0, 1) withString:lowerCaseFirstLetter];
  return [mutableColourName stringByReplacingOccurrencesOfString:@" " withString:@""];
}

+ (void)writeToFileWithColours:(NSArray *)colours
                    outputPath:(NSString *)outputPath
                      fileName:(NSString *)fileName
{
  NSString *filePath = [NSString stringWithFormat:@"%@/UIColor+%@.swift", outputPath , fileName];
  NSString *expandedFilePath = [filePath stringByExpandingTildeInPath];
  NSMutableString *implementation = [NSMutableString stringWithString:@"//  This file is automatically generated by TWCColourGenerator. Please do not edit.\n\n"];
  [implementation appendFormat:@"extension UIColor {\n\n%@}", [colours componentsJoinedByString:@""]];
  [implementation writeToFile:expandedFilePath
                   atomically:TRUE
                     encoding:NSUTF8StringEncoding
                        error:nil];
}

@end