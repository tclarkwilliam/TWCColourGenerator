#import "TWCFileFormatSwift.h"

@implementation TWCFileFormatSwift

#pragma mark - TWCLanguage

- (NSString *)implementationFormatWithColours:(NSArray *)colours fileName:(NSString *)fileName
{
  NSMutableString *implementation = [@"//  This file is automatically generated by TWCColourGenerator.\n\n" mutableCopy];
  NSString *body = [NSString stringWithFormat:@"extension UIColor {\n\n%@}", [colours componentsJoinedByString:@""]];
  [implementation appendString:body];
  return implementation;
}

- (NSString *)implementationFilePathWithName:(NSString *)fileName outputPath:(NSString *)outputPath
{
  NSString *filePath = [NSString stringWithFormat:@"%@/UIColor+%@.swift", outputPath , fileName];
  return [filePath stringByExpandingTildeInPath];
}

- (NSString *)functionBodyWithR:(CGFloat)r g:(CGFloat)g b:(CGFloat)b a:(CGFloat)a
{
  return [NSString stringWithFormat:@"{\n    return UIColor(red: %.3f, green: %.3f, blue: %.3f, alpha: %.3f)\n  }\n\n", r, g, b, a];
}

- (NSString *)functionNameWithPrefix:(NSString *)prefix colourName:(NSString *)colourName
{
  prefix = prefix.length > 0 ? [prefix stringByAppendingString:@"_"] : @"";
  return [NSString stringWithFormat:@"  class func %@%@Color() -> UIColor ", prefix, [self camelCaseColourName:colourName]];
}

- (NSString *)interfaceFormatWithColours:(NSArray *)colours fileName:(NSString *)fileName
{
  return nil;
}

- (NSString *)interfaceFilePathWithName:(NSString *)fileName outputPath:(NSString *)outputPath
{
  return nil;
}

@end